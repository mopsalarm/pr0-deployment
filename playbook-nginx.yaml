- hosts: hosts
  serial: 1

  pre_tasks:
    - name: Ensures nginx config directory exists
      tags: config
      file: path=/data/nginx/conf.d state=directory

    - name: Ensures nginx data directory exists
      tags: config
      file: path={{ item }} state=directory
      with_items:
        - /data/nginx/data
        - /data/nginx/cache
        - /data/nginx/static

    - name: copy config files
      tags: config
      copy: src="files/{{ item }}" dest="/data/nginx/conf.d/{{ item }}"
      with_items:
        - nginx.conf
        - app.conf.ctmpl
        - pr0gramm.server.conf

    - name: Copy htpasswd file
      tags: config
      copy: dest="/data/nginx/conf.d/htpasswd" content="{{ update_manager_htpasswd }}"

    - name: update website git repo
      git:
        repo: "https://github.com/mopsalarm/Pr0.git"
        dest: /data/nginx/app.pr0gramm.com
        version: gh-pages

    - name: generate cronjob to update app.pr0gramm.com
      tags: cronjob
      cron:
        name: update_app_pr0gramm_com_website
        minute: "*/10"
        job: >
          dogwrap -k {{ datadog_api_key }} -n "refresh app.pr0gramm.com" --tags cron,gh-pages -m all "git -C /data/nginx/app.pr0gramm.com pull origin gh-pages"

    - name: copy refresh-ssl-certificates script
      copy: src="files/refresh-ssl-certificates.sh" dest="/root/refresh-ssl-certificates.sh" mode=0755
      tags: cronjob

    - name: generate cronjob to renew ssl certificates
      tags: cronjob
      cron:
        name: refresh_ssl_certificates
        minute: "0"
        hour: "4"
        day: "*/5"
        job: >
          dogwrap -k {{ datadog_api_key }} -n "refresh certificates" --tags cron,letsencrypt -m all "/root/refresh-ssl-certificates.sh"

    - name: Try to reload nginx config in the container
      tags: config
      command: docker exec nginx nginx -s reload
      ignore_errors: true

  roles:
    - role: deploy-service
      tags: [restart-nginx]
      service_name: nginx
      service_port: 80
      service_docker:
        image: mopsalarm/nginx-consul-template

        ports:
          - "80:80"
          - "443:443"

        env:
          SERVICE_IGNORE: true

        extra_hosts:
          consul: "{{ ansible_ssh_host }}"

        volumes:
          - "/data/nginx/:/data/nginx/"
          - "/data/nginx/logs/:/var/log/nginx/"
          - "/data/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro"
          - "/data/nginx/conf.d/pr0gramm.server.conf:/etc/nginx/conf.d/pr0gramm.server.conf:ro"
          - "/data/nginx/conf.d/htpasswd:/etc/nginx/conf.d/htpasswd:ro"
          - "/data/nginx/conf.d/app.conf.ctmpl:/etc/consul-templates/app.conf.ctmpl:ro"
          - "/etc/letsencrypt/:/ssl/:ro"
